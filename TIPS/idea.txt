1. ll002:split long logic to small ones step by step, by using simple "for" or "if" functions. 
   With the fixed order, we have the data transfer.
2. ll003:small functions could also be setup as subfunction under the solution class.
3. LinkedList:node=node.next;
4. Binary Search:
   mid: GOOD:begin+(end-begin)/2;
        BAD:(begin+end)/2, cause corner case:(begin+end) > Integer.MAX_VALUE;
5. sorted array, double pointer:i=0,j=siz-1;sum<target, i++;sum>target, j--.
6. The statement ++array[s.charAt(i) - 'A']; is incrementing the value in the array indexed by s.charAt(i) - 'A'.
   What this loop does is that it counts up the number of occurrences of each letter in s.
   The reason for - 'A', is that it "shifts" the ascii/unicode value so that A - Z have values 0 - 25. And are thus more          suitable as an array index.
   'A' - 'A' == 0
   'B' - 'A' == 1
   'C' - 'A' == 2
   To understand this, you should understand, that Java treats char the same as (unsigned) short. Hence, you can make            calculations with char
7. sum=new int[nums.length+1]; use length+1 to avoid "out of border"..
8. boolean, return n==a; a is one of integer, so we have true or false after we have n = or != a;
9. to replace/find/remove a element from an array, u might start from 1 to n, then check by i & i-1, so no outofbound
10. ?
   >用法1 ：
    用于问号表达式  条件表达式 ？程序块1 ：程序块2 ；
    解释：如果条件表达式为真，则本程序语句执行程序块1，程序块1的值即为整个表达式的值， 否则为表达式2的值。
    注意，java只有问号表达式，而没有问号语句，问号表达式加分号不能构成程序语句。
    
